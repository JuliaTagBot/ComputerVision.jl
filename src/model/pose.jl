abstract type AbstractPose end

struct RelativePose{T‚ÇÅ <: AbstractMatrix, T‚ÇÇ <: AbstractVector} <: AbstractPose
    rotation::T‚ÇÅ
    translation::T‚ÇÇ
end

function rotation(pose::AbstractPose)
    pose.rotation
end

function translation(pose::AbstractPose)
    pose.translation
end


RelativePose(camera‚ÇÅ::AbstractCamera, camera‚ÇÇ::AbstractCamera) = RelativePose(construct_relative_pose(camera‚ÇÅ, camera‚ÇÇ)...)


function construct_relative_pose(camera‚ÇÅ, camera‚ÇÇ)
    camera_model‚ÇÅ = get_model(camera‚ÇÅ)
    camera_model‚ÇÇ = get_model(camera‚ÇÇ)
    extrinsics‚ÇÅ = get_extrinsics(camera_model‚ÇÅ)
    extrinsics‚ÇÇ = get_extrinsics(camera_model‚ÇÇ)
    camera_system‚ÇÅ = get_coordinate_system(extrinsics‚ÇÅ)
    camera_system‚ÇÇ = get_coordinate_system(extrinsics‚ÇÇ)
    ùêû‚ÇÅ = get_e‚ÇÅ(camera_system‚ÇÅ)
    ùêû‚ÇÇ = get_e‚ÇÇ(camera_system‚ÇÅ)
    ùêû‚ÇÉ = get_e‚ÇÉ(camera_system‚ÇÅ)
    ùêû‚ÇÅ‚Ä≤ = get_e‚ÇÅ(camera_system‚ÇÇ)
    ùêû‚ÇÇ‚Ä≤ = get_e‚ÇÇ(camera_system‚ÇÇ)
    ùêû‚ÇÉ‚Ä≤ = get_e‚ÇÉ(camera_system‚ÇÇ)
    ùê≠ = get_centroid(extrinsics‚ÇÇ) - get_centroid(extrinsics‚ÇÅ)
    ùêë = inv(hcat(ùêû‚ÇÅ, ùêû‚ÇÇ, ùêû‚ÇÉ)) * hcat(ùêû‚ÇÅ‚Ä≤, ùêû‚ÇÇ‚Ä≤, ùêû‚ÇÉ‚Ä≤)
    ùêë, ùê≠
end
