abstract type AbstractPlane end


Base.@kwdef struct Plane{T‚ÇÅ <: Vec3, T‚ÇÇ <: Real} <: AbstractPlane
    normal::T‚ÇÅ
    distance::T‚ÇÇ
end

function get_normal(plane::Plane)
    plane.normal
end

function get_distance(plane::Plane)
    plane.distance
end

Base.@kwdef struct PlaneSegment{T‚ÇÅ <: Plane, T‚ÇÇ <: AbstractVector} <: AbstractPlane
    plane::T‚ÇÅ
    segment::T‚ÇÇ
end

function get_plane(plane_segment::PlaneSegment)
    plane_segment.plane
end

function set_plane!(plane_segment::PlaneSegment, plane::Plane)
    plane_segment.plane = plane
end

function get_normal(plane_segment::PlaneSegment)
    get_normal(get_plane(plane_segment))
end

function get_distance(plane_segment::PlaneSegment)
    get_distance(get_plane(plane_segment))
end

function get_segment(plane_segment::PlaneSegment)
    plane_segment.segment
end

function on_plane(ùêó::AbstractVector, plane::Plane; tol::Number = 1e-10)
    ùêß = get_normal(plane)
    d = get_distance(plane)
    abs(dot(ùêó,ùêß) - d) < tol ? true : false
end
